(self.webpackChunkjupyter_cytoscape=self.webpackChunkjupyter_cytoscape||[]).push([[784],{3106:(e,t,o)=>{"use strict";o.r(t),o.d(t,{CytoscapeModel:()=>O,CytoscapeView:()=>V,EdgeModel:()=>d,EdgeView:()=>m,ElementModel:()=>a,ElementView:()=>c,GraphModel:()=>r,MODULE_NAME:()=>s.o,MODULE_VERSION:()=>s.Y,NodeModel:()=>l,NodeView:()=>p});var s=o(8657),i=o(4217);const n=o(4217);class a extends i.WidgetModel{defaults(){return Object.assign(Object.assign({},super.defaults()),{removed:!1,selected:!1,selectable:!0,classes:"",data:{}})}asCyObj(){return{data:this.get("data"),selectable:this.get("selectable"),classes:this.get("classes")}}}class l extends a{defaults(){return Object.assign(Object.assign({},super.defaults()),{_model_name:l.model_name,_model_module:l.model_module,_model_module_version:l.model_module_version,_view_name:l.view_name,_view_module:l.view_module,_view_module_version:l.view_module_version,group:"nodes",position:{},locked:!1,grabbable:!1,pannable:!1})}asCyObj(){return Object.assign(Object.assign({},super.asCyObj()),{group:this.get("group"),position:this.get("position"),locked:this.get("locked"),grabbable:this.get("grabbable"),pannable:this.get("pannable")})}}l.model_name="NodeModel",l.model_module=s.o,l.model_module_version=s.Y,l.view_name="NodeView",l.view_module=s.o,l.view_module_version=s.Y;class d extends a{defaults(){return Object.assign(Object.assign({},super.defaults()),{_model_name:d.model_name,_model_module:d.model_module,_model_module_version:d.model_module_version,_view_name:d.view_name,_view_module:d.view_module,_view_module_version:d.view_module_version,group:"edges",pannable:!0})}asCyObj(){return Object.assign(Object.assign({},super.asCyObj()),{group:this.get("group"),pannable:this.get("pannable")})}}d.model_name="EdgeModel",d.model_module=s.o,d.model_module_version=s.Y,d.view_name="EdgeView",d.view_module=s.o,d.view_module_version=s.Y;class r extends i.WidgetModel{defaults(){return Object.assign(Object.assign({},super.defaults()),{_model_name:"GraphModel",_model_module:r.model_module,_model_module_version:r.model_module_version,nodes:[],edges:[]})}}r.serializers=Object.assign({nodes:{deserialize:n.unpack_models},edges:{deserialize:n.unpack_models}},i.WidgetModel.serializers),r.model_module=s.o,r.model_module_version=s.Y;class c extends i.WidgetView{constructor(e){super({model:e.model,options:e.options}),this.cytoscapeView=this.options.cytoscapeView;const t=this.model.get("data").id;this.elem=this.cytoscapeView.cytoscape_obj.getElementById(t),this.model.on("change:removed",(()=>{this.elem.remove()})),this.model.on("change:classes",(()=>{this.elem.classes(this.model.get("classes"))})),this.model.on("change:data",(()=>{this.elem.data(this.model.get("data"))})),this.model.on("change:pannable",(()=>{this.model.get("pannable")?this.elem.panify():this.elem.unpanify()})),this.model.on("change:selectable",(()=>{this.model.get("selectable")?this.elem.selectify():this.elem.unselectify()})),this.model.on("change:selected",(()=>{this.model.get("selected")?this.elem.selectify():this.elem.unselectify()}))}valueChanged(){this.cytoscapeView.value_changed()}}class p extends c{constructor(e){super({model:e.model,options:e.options}),this.node=this.elem,this.model.on("change:position",(()=>{this.node.position(this.model.get("position"))})),this.model.on("change:locked",(()=>{this.model.get("locked")?this.node.lock():this.node.unlock()})),this.model.on("change:grabbable",(()=>{this.model.get("grabbable")?this.node.grabify():this.node.ungrabify()}))}}class m extends c{constructor(e){super({model:e.model,options:e.options})}}o(7204);var h=o(8961),u=o.n(h),g=o(1054),_=o.n(g),b=o(4773),y=o.n(b),f=o(7251),v=o.n(f),w=o(3262),x=o.n(w),j=o(9002),k=o.n(j),E=(o(2938),function(e,t,o,s){return new(o||(o=Promise))((function(i,n){function a(e){try{d(s.next(e))}catch(e){n(e)}}function l(e){try{d(s.throw(e))}catch(e){n(e)}}function d(e){var t;e.done?i(e.value):(t=e.value,t instanceof o?t:new o((function(e){e(t)}))).then(a,l)}d((s=s.apply(e,t||[])).next())}))});const M=o(4217);u().use(y()),u().use(x()),u().use(k()),u().use(_());class O extends i.DOMWidgetModel{defaults(){return Object.assign(Object.assign({},super.defaults()),{_model_name:O.model_name,_model_module:O.model_module,_model_module_version:O.model_module_version,_view_name:O.view_name,_view_module:O.view_module,_view_module_version:O.view_module_version,auto_unselectify:!0,box_selection_enabled:!1,cytoscape_layout:{},cytoscape_style:[],elements:[],zoom:0,rendered_position:{},tooltip_source:"",graph:null})}initialize(e,t){super.initialize(e,t),this.on("msg:custom",this.processMessage.bind(this))}processMessage(e,t){"layout"===e.name&&this.forEachView((e=>{e.cytoscape_obj.layout(this.get("cytoscape_layout")).run()}))}forEachView(e){for(const t in this.views)this.views[t].then((t=>{e(t)}))}}O.serializers=Object.assign({graph:{deserialize:M.unpack_models}},i.DOMWidgetModel.serializers),O.model_name="CytoscapeModel",O.model_module=s.o,O.model_module_version=s.Y,O.view_name="CytoscapeView",O.view_module=s.o,O.view_module_version=s.Y;class V extends i.DOMWidgetView{constructor(){super(...arguments),this.is_rendered=!1,this.nodeViews=[],this.edgeViews=[],this.monitored={}}render(){this.el.classList.add("custom-widget"),this.displayed.then((()=>{this.init_render(),this.cytoscape_obj.startBatch(),this.nodeViews=new M.ViewList(this.addNodeModel,this.removeNodeView,this),this.nodeViews.update(this.model.get("graph").get("nodes")),this.edgeViews=new M.ViewList(this.addEdgeModel,this.removeEdgeView,this),this.edgeViews.update(this.model.get("graph").get("edges")),this.cytoscape_obj.endBatch(),this.cytoscape_obj.elements().layout(this.model.get("cytoscape_layout")).run()})),this.model.get("graph").on_some_change(["nodes","edges"],this._updateViewLists,this),this.model.on("change:min_zoom",this._updateMinZoom,this),this.model.on("change:max_zoom",this._updateMaxZoom,this),this.model.on("change:zooming_enabled",this._updateZoomingEnabled,this),this.model.on("change:user_zooming_enabled",this._updateUserZoomingEnabled,this),this.model.on("change:panning_enabled",this._updatePanningEnabled,this),this.model.on("change:user_panning_enabled",this._updateUserPanningEnabled,this),this.model.on("change:box_selection_enabled",this._updateBoxSelectionEnabled,this),this.model.on("change:selection_type",this._updateSelectionType,this),this.model.on("change:touch_tap_threshold",this.value_changed,this),this.model.on("change:desktop_tap_threshold",this.value_changed,this),this.model.on("change:autolock",this._updateAutolock,this),this.model.on("change:auto_ungrabify",this._updateAutoUngrabify,this),this.model.on("change:auto_unselectify",this._updateAutoUnselectify,this),this.model.on("change:cytoscape_layout",this._updateLayout,this),this.model.on("change:cytoscape_style",this._updateStyle,this),this.model.on("change:elements",this.value_changed,this),this.model.on("change:pixel_ratio",this.value_changed,this),this.model.on("change:_interaction_handlers",this.listenForUserEvents,this);const e=this.model.get("layout");null!==e&&e.on_some_change(["width","height"],this._resize,this)}value_changed(){this.is_rendered&&(this.monitored={},this.init_render())}_updateViewLists(){this.nodeViews.update(this.model.get("graph").get("nodes")),this.edgeViews.update(this.model.get("graph").get("edges")),this.cytoscape_obj.elements().layout(this.model.get("cytoscape_layout")).run(),console.log("whole cytoscape relayout")}listenForUserEvents(){const e=this.model.get("_interaction_handlers");if(this.cytoscape_obj)for(const t in e)if(Object.prototype.hasOwnProperty.call(e,t))for(let o=0;o<e[t].length;o++){const s=e[t][o];if(this.monitored[t]){if(this.monitored[t].includes(s))return;this.monitored[t].push(s)}else this.monitored[t]=[s];this.cytoscape_obj.on(s,t,(e=>{this.send({event:s,widget:t,data:e.target.json()})}))}}init_render(){null!==this.model.get("graph")&&(this.is_rendered=!0,this.cytoscape_obj=u()({container:this.el,minZoom:this.model.get("min_zoom"),maxZoom:this.model.get("max_zoom"),zoomingEnabled:this.model.get("zooming_enabled"),userZoomingEnabled:this.model.get("user_zooming_enabled"),panningEnabled:this.model.get("panning_enabled"),boxSelectionEnabled:this.model.get("box_selection_enabled"),selectionType:this.model.get("selection_type"),touchTapThreshold:this.model.get("touch_tap_threshold"),desktopTapThreshold:this.model.get("desktop_tap_threshold"),autolock:this.model.get("autolock"),autoungrabify:this.model.get("auto_ungrabify"),autounselectify:this.model.get("auto_unselectify"),headless:this.model.get("headless"),styleEnabled:this.model.get("style_enabled"),hideEdgesOnViewport:this.model.get("hide_edges_on_viewport"),textureOnViewport:this.model.get("texture_on_viewport"),motionBlur:this.model.get("motion_blur"),motionBlurOpacity:this.model.get("motion_blur_opacity"),wheelSensitivity:this.model.get("wheel_sensitivity"),pixelRatio:this.model.get("pixel_ratio"),style:this.model.get("cytoscape_style"),elements:[]}),this.listenForUserEvents(),this.cytoscape_obj.on("click",(e=>{const t=e.target,o=t.popperRef(),s=document.createElement("div"),i=this.model.get("tooltip_source");t.data()[i]&&v()(s,{trigger:"manual",lazy:!1,arrow:!0,theme:"material",placement:"bottom",content:()=>{const e=document.createElement("div");return e.innerHTML=t.data()[i].replace(/(?:\r\n|\r|\n)/g,"<br>"),e},onCreate:e=>{e&&e.popperInstance&&(e.popperInstance.reference=o)}}).show()})))}_updateMinZoom(){this.cytoscape_obj.minZoom(this.model.get("min_zoom"))}_updateMaxZoom(){this.cytoscape_obj.maxZoom(this.model.get("max_zoom"))}_updateZoomingEnabled(){this.cytoscape_obj.zoomingEnabled(this.model.get("zooming_enabled"))}_updateUserZoomingEnabled(){this.cytoscape_obj.userZoomingEnabled(this.model.get("user_zooming_enabled"))}_updatePanningEnabled(){this.cytoscape_obj.panningEnabled(this.model.get("panning_enabled"))}_updateUserPanningEnabled(){this.cytoscape_obj.userPanningEnabled(this.model.get("user_panning_enabled"))}_updateBoxSelectionEnabled(){this.cytoscape_obj.boxSelectionEnabled(this.model.get("box_selection_enabled"))}_updateSelectionType(){this.cytoscape_obj.selectionType(this.model.get("selection_type"))}_updateAutolock(){this.cytoscape_obj.autolock(this.model.get("autolock"))}_updateAutoUngrabify(){this.cytoscape_obj.autoungrabify(this.model.get("auto_ungrabify"))}_updateAutoUnselectify(){this.cytoscape_obj.autounselectify(this.model.get("auto_unselectify"))}_updateLayout(){this.cytoscape_obj.layout(this.model.get("cytoscape_layout")).run()}_updateStyle(){this.cytoscape_obj.style(this.model.get("cytoscape_style"))}_resize(){this.cytoscape_obj&&(this.cytoscape_obj.resize(),this.cytoscape_obj.fit())}_addElementListeners(e,t){e.on("select",(e=>{t.model.set("selected",!0),t.model.save_changes()})),e.on("unselect",(e=>{t.model.set("selected",!1),t.model.save_changes()})),e.on("remove",(e=>{t.model.set("removed",!0),t.model.save_changes()}))}addNodeModel(e){return E(this,void 0,void 0,(function*(){const t=this.cytoscape_obj.add(e.asCyObj()),o=yield this.create_child_view(e,{cytoscapeView:this});return this._addElementListeners(t,o),t.on("grab",(e=>{o.model.set("grabbed",!0),o.model.save_changes()})),t.on("free",(e=>{o.model.set("grabbed",!1),o.model.save_changes()})),o}))}removeNodeView(e){e.model.set("removed",!0),e.remove()}addEdgeModel(e){return E(this,void 0,void 0,(function*(){const t=this.cytoscape_obj.add(e.asCyObj()),o=yield this.create_child_view(e,{cytoscapeView:this});return this._addElementListeners(t,o),o}))}removeEdgeView(e){e.model.set("removed",!0),e.remove()}}},8657:(e,t,o)=>{"use strict";o.d(t,{Y:()=>i,o:()=>n});const s=o(4147),i=s.version,n=s.name},3889:(e,t,o)=>{(t=o(3645)(!1)).push([e.id,".custom-widget {\n  background-color: white;\n  height: 400px;\n  width: 100%;\n  resize: both;\n}\n\n.custom-widget:hover {\n    border: 1px dashed #ccc;\n}",""]),e.exports=t},8862:(e,t,o)=>{(t=o(3645)(!1)).push([e.id,".tippy-tooltip.material-theme{background-color:#505355;font-size:13px;font-weight:600}.tippy-tooltip.material-theme[data-placement^=top]>.tippy-arrow{border-width:8px 8px 0;border-top-color:#505355}.tippy-tooltip.material-theme[data-placement^=bottom]>.tippy-arrow{border-width:0 8px 8px;border-bottom-color:#505355}.tippy-tooltip.material-theme[data-placement^=left]>.tippy-arrow{border-width:8px 0 8px 8px;border-left-color:#505355}.tippy-tooltip.material-theme[data-placement^=right]>.tippy-arrow{border-width:8px 8px 8px 0;border-right-color:#505355}.tippy-tooltip.material-theme>.tippy-content{padding:4px 7px}.tippy-tooltip.material-theme>.tippy-backdrop{background-color:#505355}.tippy-tooltip.material-theme>.tippy-svg-arrow{fill:#505355}",""]),e.exports=t},3645:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var o=function(e,t){var o,s,i,n=e[1]||"",a=e[3];if(!a)return n;if(t&&"function"==typeof btoa){var l=(o=a,s=btoa(unescape(encodeURIComponent(JSON.stringify(o)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(s),"/*# ".concat(i," */")),d=a.sources.map((function(e){return"/*# sourceURL=".concat(a.sourceRoot||"").concat(e," */")}));return[n].concat(d).concat([l]).join("\n")}return[n].join("\n")}(t,e);return t[2]?"@media ".concat(t[2]," {").concat(o,"}"):o})).join("")},t.i=function(e,o,s){"string"==typeof e&&(e=[[null,e,""]]);var i={};if(s)for(var n=0;n<this.length;n++){var a=this[n][0];null!=a&&(i[a]=!0)}for(var l=0;l<e.length;l++){var d=[].concat(e[l]);s&&i[d[0]]||(o&&(d[2]?d[2]="".concat(o," and ").concat(d[2]):d[2]=o),t.push(d))}},t}},7204:(e,t,o)=>{var s=o(3379),i=o(3889);"string"==typeof(i=i.__esModule?i.default:i)&&(i=[[e.id,i,""]]);s(i,{insert:"head",singleton:!1}),e.exports=i.locals||{}},2938:(e,t,o)=>{var s=o(3379),i=o(8862);"string"==typeof(i=i.__esModule?i.default:i)&&(i=[[e.id,i,""]]);s(i,{insert:"head",singleton:!1}),e.exports=i.locals||{}},3379:(e,t,o)=>{"use strict";var s,i=function(){var e={};return function(t){if(void 0===e[t]){var o=document.querySelector(t);if(window.HTMLIFrameElement&&o instanceof window.HTMLIFrameElement)try{o=o.contentDocument.head}catch(e){o=null}e[t]=o}return e[t]}}(),n=[];function a(e){for(var t=-1,o=0;o<n.length;o++)if(n[o].identifier===e){t=o;break}return t}function l(e,t){for(var o={},s=[],i=0;i<e.length;i++){var l=e[i],d=t.base?l[0]+t.base:l[0],r=o[d]||0,c="".concat(d," ").concat(r);o[d]=r+1;var p=a(c),m={css:l[1],media:l[2],sourceMap:l[3]};-1!==p?(n[p].references++,n[p].updater(m)):n.push({identifier:c,updater:g(m,t),references:1}),s.push(c)}return s}function d(e){var t=document.createElement("style"),s=e.attributes||{};if(void 0===s.nonce){var n=o.nc;n&&(s.nonce=n)}if(Object.keys(s).forEach((function(e){t.setAttribute(e,s[e])})),"function"==typeof e.insert)e.insert(t);else{var a=i(e.insert||"head");if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}return t}var r,c=(r=[],function(e,t){return r[e]=t,r.filter(Boolean).join("\n")});function p(e,t,o,s){var i=o?"":s.media?"@media ".concat(s.media," {").concat(s.css,"}"):s.css;if(e.styleSheet)e.styleSheet.cssText=c(t,i);else{var n=document.createTextNode(i),a=e.childNodes;a[t]&&e.removeChild(a[t]),a.length?e.insertBefore(n,a[t]):e.appendChild(n)}}function m(e,t,o){var s=o.css,i=o.media,n=o.sourceMap;if(i?e.setAttribute("media",i):e.removeAttribute("media"),n&&"undefined"!=typeof btoa&&(s+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(n))))," */")),e.styleSheet)e.styleSheet.cssText=s;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(s))}}var h=null,u=0;function g(e,t){var o,s,i;if(t.singleton){var n=u++;o=h||(h=d(t)),s=p.bind(null,o,n,!1),i=p.bind(null,o,n,!0)}else o=d(t),s=m.bind(null,o,t),i=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(o)};return s(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;s(e=t)}else i()}}e.exports=function(e,t){(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=(void 0===s&&(s=Boolean(window&&document&&document.all&&!window.atob)),s));var o=l(e=e||[],t);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var s=0;s<o.length;s++){var i=a(o[s]);n[i].references--}for(var d=l(e,t),r=0;r<o.length;r++){var c=a(o[r]);0===n[c].references&&(n[c].updater(),n.splice(c,1))}o=d}}}},4147:e=>{"use strict";e.exports=JSON.parse('{"name":"jupyter-cytoscape","version":"1.3.3","description":"A Cytoscape Jupyter Widget","keywords":["jupyter","jupyterlab","jupyterlab-extension","widgets","cytoscape"],"files":["{dist,lib}/**/*.{js,ts,map}","css/*.css","LICENSE"],"homepage":"https://github.com/cytoscape/ipycytoscape","bugs":{"url":"https://github.com/cytoscape/ipycytoscape/issues"},"license":"BSD-3-Clause","author":{"name":"Mariana Meireles","email":"mariana.meireles@quantstack.net"},"main":"lib/index.js","types":"./lib/index.d.ts","repository":{"type":"git","url":"https://github.com/cytoscape/ipycytoscape"},"scripts":{"build:prod":"npm run build:lib && npm run build:all","build":"npm run build:lib && npm run build:all:dev","build:labextension":"npm run clean:labextension && jupyter labextension build .","build:labextension:dev":"npm run clean:labextension && jupyter labextension build --development True .","build:lib":"tsc","build:nbextension":"webpack --mode=production","build:nbextension:dev":"webpack --mode=development","build:all":"npm run build:labextension && npm run build:nbextension","build:all:dev":"npm run build:labextension:dev && npm run build:nbextension:dev","clean":"npm run clean:lib && npm run clean:nbextension","clean:lib":"rimraf lib","clean:labextension":"rimraf ipycytoscape/labextension","clean:nbextension":"rimraf ipycytoscape/nbextension/static/index.js","lint":"eslint . --ext .ts --fix","lint-check":"eslint . --ext .ts","prepack":"npm run build:lib","test":"npm run test:firefox","test:chrome":"karma start --browsers=Chrome tests/karma.conf.js","test:debug":"karma start --browsers=Chrome --singleRun=false --debug=true tests/karma.conf.js","test:firefox":"karma start --browsers=Firefox tests/karma.conf.js","test:ie":"karma start --browsers=IE tests/karma.conf.js","watch":"npm-run-all -p watch:*","watch:lib":"tsc -w","watch:nbextension":"webpack --watch --mode=development","watch:labextension":"jupyter labextension watch ."},"dependencies":{"@jupyter-widgets/base":"^1.1.10 || ^2 || ^3 || ^4.0.0","@types/cytoscape":"^3.8.8","cytoscape":"^3.14.0","cytoscape-cola":"^2.3.0","cytoscape-dagre":"^2.2.2","cytoscape-klay":"^3.1.3","cytoscape-popper":"^1.0.6","tippy.js":"^5.2.1"},"devDependencies":{"@jupyterlab/builder":"^3.0.0","@phosphor/application":"^1.6.0","@phosphor/widgets":"^1.6.0","@types/expect.js":"^0.3.29","@types/mocha":"^5.2.5","@types/node":"^10.11.6","@types/webpack-env":"^1.13.6","@typescript-eslint/eslint-plugin":"^5.10.0","@typescript-eslint/parser":"^5.10.0","css-loader":"^3.2.0","eslint":"^8.0.0","eslint-config-prettier":"^6.11.0","eslint-plugin-prettier":"^3.1.3","expect.js":"^0.3.1","fs-extra":"^7.0.0","karma":"^6.0.0","karma-chrome-launcher":"^2.2.0","karma-firefox-launcher":"^1.1.0","karma-ie-launcher":"^1.0.0","karma-mocha":"^2.0.1","karma-mocha-reporter":"^2.2.5","karma-typescript":"^5.5.0","lint-staged":"^10.2.2","mkdirp":"^0.5.1","mocha":"^9.2.2","npm-run-all":"^4.1.3","prettier":"^2.0.5","rimraf":"^2.6.2","source-map-loader":"^0.2.4","style-loader":"^1.0.0","ts-loader":"^5.2.1","typescript":"~3.7.1","webpack":"^5.0.0","webpack-cli":"^4.0.0"},"jupyterlab":{"extension":"lib/plugin","outputDir":"ipycytoscape/labextension","sharedPackages":{"@jupyter-widgets/base":{"bundled":false,"singleton":true}}},"prettier":{"singleQuote":true}}')}}]);